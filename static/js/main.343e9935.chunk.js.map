{"version":3,"sources":["utils/observer.js","components/MangaCard.js","utils/strings.js","containers/Discover.js","containers/Search.js","containers/PageNotFound.js","utils/fetch.js","utils/bridge.js","sources/MangaDex.js","sources/Guya.js","sources/NHentai.js","sources/sourcemap.js","App.js","index.js"],"names":["IntersectionObserver","entries","self","forEach","entry","isIntersecting","img","target","querySelector","src","dataset","unobserve","MangaCard","props","trimDescription","desc","slice","length","componentDidMount","observer","observe","ref","current","React","createRef","className","this","href","mangaUrlizer","slug","rel","data-src","coverUrl","alt","mangaTitle","PureComponent","capitalizeFirstLetters","sentence","split","filter","Boolean","map","str","charAt","toUpperCase","toLowerCase","join","Discover","createHeroSection","section","key","id","title","items","discover","push","item","size","Search","handleInput","event","query","value","setState","searching","results","Set","runSearchQuery","sources","source","queryTask","runningQueries","add","baseReq","searchRequest","then","e","text","search","metadata","manga","getMangaUrl","delete","state","onKeyPress","type","placeholder","undefined","PageNotFound","url","options","a","fetch","createRequestObject","obj","req","method","headers","referrerPolicy","body","data","createIconText","createMangaTile","image","MD_DOMAIN","MangaDex","request","sections","$","cheerio","load","parseFeaturedMangaTiles","parseNewMangaSectionTiles","parseRecentlyUpdatedMangaSectionTiles","featuredManga","each","i","elem","find","first","attr","match","caption","bookmarks","rating","primaryText","icon","secondaryText","newManga","updateTime","subtitleText","updates","toArray","hasImg","badge","subTitle","pText","sText","replace","trim","result","JSON","parse","mangas","mangaDetails","toString","titles","status","langFlag","langName","artist","author","avgRating","covers","follows","users","views","hentai","relatedIds","lastUpdate","page","stringify","getMangaDetails","GUYA_ALL_SERIES_API","Guya","series","seriesDetails","Object","keys","includes","seriesMetadata","NHentai","hStatus","sixDigit","timeout","param","includeContent","content","excludeContent","encodeURI","mangaTiles","contextNode","mangaId","parseInt","containerNode","currNode","idHref","view_more","updatedHentai","localStorage","getItem","sourcemap","App","initializeMobileMenu","nav","document","getElementById","$navbarBurgers","Array","prototype","call","querySelectorAll","el","addEventListener","classList","toggle","remove","initializeDiscoverItems","getHomePageSectionRequest","homeSection","getHomePageSections","values","role","aria-label","aria-expanded","aria-hidden","to","exact","path","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.343e9935.chunk.js","sourcesContent":["export default new IntersectionObserver((entries, self) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      let img = entry.target.querySelector(\"img\");\n      img.src = img.dataset.src;\n      self.unobserve(entry.target);\n    }\n  });\n});\n","import React, { PureComponent } from \"react\";\nimport observer from \"../utils/observer\";\n\nconst MAX_DESC_LENGTH = 128;\n\nexport default class MangaCard extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  trimDescription = (desc) => {\n    if (desc) {\n      return (\n        desc.slice(0, MAX_DESC_LENGTH) +\n        (desc.length > MAX_DESC_LENGTH ? \"...\" : \"\")\n      );\n    } else {\n      return \"\";\n    }\n  };\n\n  componentDidMount = () => {\n    observer.observe(this.ref.current);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"column is-6-mobile is-3-tablet is-2-desktop\"\n        ref={this.ref}\n      >\n        <div className=\"manga card\">\n          <div className=\"manga card-image\">\n            <a\n              href={this.props.mangaUrlizer(this.props.slug)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <figure className=\"image\">\n                <img data-src={this.props.coverUrl} alt={this.props.slug} />\n              </figure>\n            </a>\n          </div>\n          <div className=\"manga card-content\">\n            <div className=\"media\">\n              <div className=\"media-content\">\n                <p className=\"title is-5\">\n                  <a\n                    href={this.props.mangaUrlizer(this.props.slug)}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {this.props.mangaTitle}\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export const capitalizeFirstLetters = (sentence) => {\n  return sentence\n    .split(\" \")\n    .filter(Boolean)\n    .map((str) => str.charAt(0).toUpperCase() + str.toLowerCase().slice(1))\n    .join(\" \");\n};\n","import React, { PureComponent } from \"react\";\nimport MangaCard from \"../components/MangaCard\";\nimport { capitalizeFirstLetters } from \"../utils/strings.js\";\n\nexport default class Discover extends PureComponent {\n  createHeroSection = (section) => {\n    return (\n      <section key={section.id} className=\"hero column is-full\">\n        <h1 className=\"title is-4\">{capitalizeFirstLetters(section.title)}</h1>\n      </section>\n    );\n  };\n\n  render() {\n    const items = [];\n    this.props.discover.forEach((section) => {\n      items.push(this.createHeroSection(section));\n      section.items.forEach((item) => {\n        items.push(\n          <MangaCard\n            key={section.id + item.slug}\n            mangaUrlizer={section.mangaUrlizer}\n            slug={item.slug}\n            coverUrl={item.coverUrl}\n            mangaTitle={item.mangaTitle}\n          />\n        );\n      });\n    });\n    return (\n      <div className=\"columns is-mobile is-multiline\">\n        <section className=\"hero column is-full\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">Discover</h1>\n              <h2 className=\"subtitle\">Discover your favourites here.</h2>\n            </div>\n          </div>\n        </section>\n        {this.props.discover.size ? (\n          items\n        ) : (\n          <progress className=\"progress is-small is-dark\"></progress>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport MangaCard from \"../components/MangaCard\";\n\nexport default class Search extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searching: false,\n      results: new Set(),\n    };\n    this.runningQueries = new Set();\n  }\n\n  handleInput = (event) => {\n    if (event.key === \"Enter\") {\n      let query = {\n        title: event.target.value,\n      };\n      this.setState(\n        {\n          searching: true,\n          results: new Set(),\n        },\n        () => {\n          this.runSearchQuery(query);\n        }\n      );\n    }\n  };\n\n  runSearchQuery = (query) => {\n    this.props.sources.forEach((source) => {\n      const queryTask = {\n        source,\n        query,\n      };\n      this.runningQueries.add(queryTask);\n      let baseReq = source.searchRequest(query);\n      baseReq()\n        .then((e) => e.text())\n        .then((e) => {\n          let results = source.search(e, baseReq.metadata).map((manga) => {\n            manga.mangaUrlizer = source.getMangaUrl;\n            return manga;\n          });\n          this.runningQueries.delete(queryTask);\n          this.setState({\n            results: new Set([...this.state.results, ...results]),\n            searching: this.runningQueries.size ? true : false,\n          });\n        });\n    });\n  };\n\n  render() {\n    const items = [];\n    this.state.results.forEach((manga) =>\n      items.push(\n        <MangaCard\n          key={manga.slug}\n          mangaUrlizer={manga.mangaUrlizer}\n          slug={manga.slug}\n          coverUrl={manga.coverUrl}\n          mangaTitle={manga.mangaTitle}\n        />\n      )\n    );\n    return (\n      <div className=\"columns is-multiline\">\n        <section className=\"hero column is-full\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">Search</h1>\n              <h2 className=\"subtitle\">\n                Press enter after your query to search.\n              </h2>\n            </div>\n          </div>\n          <input\n            className=\"input is-medium\"\n            onKeyPress={this.handleInput}\n            type=\"text\"\n            placeholder=\"Search...\"\n          />\n        </section>\n        {items}\n        {this.state.searching ? (\n          <progress className=\"progress is-small is-dark\"></progress>\n        ) : undefined}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\n\nexport default class PageNotFound extends PureComponent {\n  render() {\n    return (\n      <div className=\"columns is-multiline\" id=\"latest-container\">\n        <section className=\"hero column is-full\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">404</h1>\n              <h2 className=\"subtitle\">\n                Go home? Or visit <a href=\"https://guya.moe/\">guya.moe</a>.\n              </h2>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","export default async (url, options) => {\n  return fetch(`https://cors-anywhere.herokuapp.com/${url}`, options);\n};\n","import fetch from \"./fetch.js\";\n\nexport const createRequestObject = (obj) => {\n  const req = async function () {\n    return fetch(obj.url, {\n      method: obj.method || \"GET\",\n      headers: obj.headers || {},\n      referrerPolicy: \"no-referrer\",\n      body: obj.data,\n    });\n  };\n  req.metadata = obj.metadata;\n  return req;\n};\n\nexport const createHomeSection = (obj) => {\n  return obj;\n};\n\nexport const createHomeSectionRequest = (obj) => {\n  return obj;\n};\n\nexport const createIconText = (obj) => {\n  return obj.text || \"\";\n};\n\nexport const createMangaTile = (obj) => {\n  return {\n    coverUrl: obj.image,\n    slug: obj.id,\n    mangaTitle: obj.title,\n  };\n};\n\nexport const createManga = (obj) => {\n  return obj;\n};\n","import {\n  createRequestObject,\n  createHomeSection,\n  createHomeSectionRequest,\n  createIconText,\n  createMangaTile,\n  createManga,\n} from \"../utils/bridge.js\";\nimport cheerio from \"cheerio\";\n\nconst MD_DOMAIN = \"https://mangadex.org\";\nconst MD_SEARCH = \"https://mangadexapi.appspot.com/search\";\n\nexport default class MangaDex {\n  getHomePageSectionRequest() {\n    let request1 = createRequestObject({\n      url: MD_DOMAIN,\n      method: \"GET\",\n    });\n    let request2 = createRequestObject({\n      url: `${MD_DOMAIN}/updates`,\n      method: \"GET\",\n    });\n\n    let section1 = createHomeSection({\n      id: \"featured_titles\",\n      title: \"FEATURED TITLES\",\n    });\n    let section2 = createHomeSection({ id: \"new_titles\", title: \"NEW TITLES\" });\n    let section3 = createHomeSection({\n      id: \"recently_updated\",\n      title: \"RECENTLY UPDATED TITLES\",\n    });\n\n    return [\n      createHomeSectionRequest({\n        request: request1,\n        sections: [section1, section2],\n      }),\n      createHomeSectionRequest({\n        request: request2,\n        sections: [section3],\n      }),\n    ];\n  }\n\n  getHomePageSections(data, sections) {\n    let $ = cheerio.load(data);\n    return sections.map((section) => {\n      switch (section.id) {\n        case \"featured_titles\":\n          section.items = this.parseFeaturedMangaTiles($);\n          break;\n        case \"new_titles\":\n          section.items = this.parseNewMangaSectionTiles($);\n          break;\n        case \"recently_updated\":\n          section.items = this.parseRecentlyUpdatedMangaSectionTiles($);\n          break;\n        default:\n          break;\n      }\n\n      return section;\n    });\n  }\n\n  parseFeaturedMangaTiles($) {\n    let featuredManga = [];\n\n    $(\"#hled_titles_owl_carousel .large_logo\").each(function (i, elem) {\n      let title = $(elem);\n\n      let img = title.find(\"img\").first();\n      let links = title.find(\"a\");\n\n      let idStr = links.first().attr(\"href\");\n      let id = (idStr || \"\").match(/(\\d+)(?=\\/)/) ?? \"-1\";\n\n      let caption = title.find(\".car-caption p:nth-child(2)\");\n      let bookmarks = caption.find(\"span[title=Follows]\").text();\n      let rating = caption.find(\"span[title=Rating]\").text();\n\n      featuredManga.push(\n        createMangaTile({\n          id: id[0],\n          image: img.attr(\"data-src\") ?? \"\",\n          title: createIconText({ text: img.attr(\"title\") ?? \"\" }),\n          primaryText: createIconText({\n            text: bookmarks,\n            icon: \"bookmark.fill\",\n          }),\n          secondaryText: createIconText({ text: rating, icon: \"star.fill\" }),\n        })\n      );\n    });\n\n    return featuredManga;\n  }\n\n  parseNewMangaSectionTiles($) {\n    let newManga = [];\n\n    $(\"#new_titles_owl_carousel .large_logo\").each(function (i, elem) {\n      let title = $(elem);\n\n      let img = title.find(\"img\").first();\n      let links = title.find(\"a\");\n\n      let idStr = links.first().attr(\"href\");\n      let id = idStr.match(/(\\d+)(?=\\/)/);\n\n      let caption = title.find(\".car-caption p:nth-child(2)\");\n      let updateTime = caption.find(\"span\").text();\n      newManga.push(\n        createMangaTile({\n          id: id[0],\n          image: img.attr(\"data-src\") ?? \" \",\n          title: createIconText({ text: img.attr(\"title\") ?? \" \" }),\n          subtitleText: createIconText({ text: caption.find(\"a\").text() }),\n          secondaryText: createIconText({\n            text: updateTime,\n            icon: \"clock.fill\",\n          }),\n        })\n      );\n    });\n\n    return newManga;\n  }\n\n  parseRecentlyUpdatedMangaSectionTiles($) {\n    let updates = [];\n    let elem = $(\"tr\", \"tbody\").toArray();\n    let i = 0;\n\n    while (i < elem.length) {\n      let hasImg = false;\n      let idStr = $(\"a.manga_title\", elem[i]).attr(\"href\") ?? \"\";\n      let id = (idStr.match(/(\\d+)(?=\\/)/) ?? \"\")[0] ?? \"\";\n      let title = $(\"a.manga_title\", elem[i]).text() ?? \"\";\n      let image = MD_DOMAIN + $(\"img\", elem[i]).attr(\"src\") ?? \"\";\n\n      // in this case: badge will be number of updates\n      // that the manga has received within last week\n      let badge = 0;\n      let pIcon = \"eye.fill\";\n      let sIcon = \"clock.fill\";\n      let subTitle = \"\";\n      let pText = \"\";\n      let sText = \"\";\n\n      let first = true;\n      i++;\n      while (!hasImg && i < elem.length) {\n        // for the manga tile, we only care about the first/latest entry\n        if (first && !hasImg) {\n          subTitle = $(\"a\", elem[i]).first().text();\n          pText = $(\".text-center.text-info\", elem[i]).text();\n          sText = $(\"time\", elem[i]).text().replace(\"ago\", \"\").trim();\n          first = false;\n        }\n        badge++;\n        i++;\n\n        hasImg = $(elem[i]).find(\"img\").length > 0;\n      }\n\n      updates.push(\n        createMangaTile({\n          id,\n          image,\n          title: createIconText({ text: title }),\n          subtitleText: createIconText({ text: subTitle }),\n          primaryText: createIconText({ text: pText, icon: pIcon }),\n          secondaryText: createIconText({ text: sText, icon: sIcon }),\n          badge,\n        })\n      );\n    }\n\n    return updates;\n  }\n\n  getMangaDetails(data, metadata) {\n    let result = JSON.parse(data);\n\n    let mangas = [];\n    for (let mangaDetails of result[\"result\"]) {\n      mangas.push(\n        createManga({\n          id: mangaDetails[\"id\"].toString(),\n          titles: mangaDetails[\"titles\"][0],\n          image: mangaDetails[\"image\"],\n          rating: mangaDetails[\"rating\"],\n          status: mangaDetails[\"status\"],\n          langFlag: mangaDetails[\"langFlag\"],\n          langName: mangaDetails[\"langName\"],\n          artist: mangaDetails[\"artist\"],\n          author: mangaDetails[\"author\"],\n          avgRating: mangaDetails[\"avgRating\"],\n          covers: mangaDetails[\"covers\"],\n          desc: mangaDetails[\"description\"],\n          follows: mangaDetails[\"follows\"],\n          users: mangaDetails[\"users\"],\n          views: mangaDetails[\"views\"],\n          hentai: mangaDetails[\"hentai\"],\n          relatedIds: mangaDetails[\"relatedIds\"],\n          lastUpdate: mangaDetails[\"lastUpdate\"],\n        })\n      );\n    }\n\n    return mangas;\n  }\n\n  searchRequest(query, page) {\n    return createRequestObject({\n      url: MD_SEARCH,\n      method: \"POST\",\n      data: JSON.stringify({\n        title: query.title,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    });\n  }\n\n  search(data, metadata) {\n    let mangas = this.getMangaDetails(data, {});\n    return mangas.map((manga) => {\n      return createMangaTile({\n        id: manga.id,\n        image: manga.image,\n        title: createIconText({\n          text:\n            (typeof manga.titles === \"string\"\n              ? manga.titles\n              : manga.titles[0]) || \"Unknown\",\n        }),\n      });\n    });\n  }\n\n  getMangaUrl(slug) {\n    return `https://guya.moe/title/${slug}/`;\n  }\n}\n","import {\n  createRequestObject,\n  createHomeSection,\n  createHomeSectionRequest,\n  createIconText,\n  createMangaTile,\n} from \"../utils/bridge.js\";\n\nconst GUYA_API_BASE = \"https://guya.moe\";\nconst GUYA_ALL_SERIES_API = `${GUYA_API_BASE}/api/get_all_series/`;\n\nexport default class Guya {\n  getHomePageSectionRequest() {\n    return [\n      createHomeSectionRequest({\n        request: createRequestObject({\n          url: GUYA_ALL_SERIES_API,\n          method: \"GET\",\n        }),\n        sections: [createHomeSection({ id: \"all_guya\", title: \"ALL GUYA\" })],\n      }),\n    ];\n  }\n\n  getHomePageSections(data, sections) {\n    let result = typeof data === \"string\" ? JSON.parse(data) : data;\n\n    return sections.map((section) => {\n      let mangas = [];\n      for (let series in result) {\n        let seriesDetails = result[series];\n        mangas.push(\n          createMangaTile({\n            id: seriesDetails[\"slug\"],\n            image: `${GUYA_API_BASE}/${seriesDetails[\"cover\"]}`,\n            title: createIconText({ text: series }),\n          })\n        );\n      }\n      section.items = mangas;\n      return section;\n    });\n  }\n\n  searchRequest(query, page) {\n    return createRequestObject({\n      metadata: { query: query.title },\n      url: GUYA_ALL_SERIES_API,\n      method: \"GET\",\n    });\n  }\n\n  search(data, metadata) {\n    let result = typeof data === \"string\" ? JSON.parse(data) : data;\n    let query = metadata[\"query\"].toLowerCase();\n\n    let filteredResults = Object.keys(result).filter((e) =>\n      e.toLowerCase().includes(query)\n    );\n\n    return filteredResults.map((series) => {\n      let seriesMetadata = result[series];\n      return createMangaTile({\n        id: seriesMetadata[\"slug\"],\n        image: `${GUYA_API_BASE}/${seriesMetadata[\"cover\"]}`,\n        title: createIconText({ text: series }),\n      });\n    });\n  }\n\n  getMangaUrl(slug) {\n    return `https://guya.moe/read/manga/${slug}/`;\n  }\n}\n","import {\n  createRequestObject,\n  createHomeSection,\n  createHomeSectionRequest,\n  createIconText,\n  createMangaTile,\n} from \"../utils/bridge.js\";\nimport cheerio from \"cheerio\";\n\nconst NHENTAI_DOMAIN = \"https://nhentai.net\";\n\nexport default class NHentai {\n  searchRequest(query, page) {\n    // If h-sources are disabled for the search request, always return null\n    if (query.hStatus === false) {\n      return null;\n    }\n\n    // If the search query is a six digit direct link to a manga, create a request to just that URL and alert the handler via metadata\n    if (query.title?.match(/\\d{5,6}/)) {\n      return createRequestObject({\n        url: `${NHENTAI_DOMAIN}/g/${query.title}`,\n        metadata: { sixDigit: true },\n        timeout: 4000,\n        method: \"GET\",\n      });\n    }\n\n    // Concat all of the available options together into a search keyword which can be supplied as a GET request param\n    let param = \"\";\n    if (query.title) {\n      param += query.title.replace(\" \", \"+\") + \"+\";\n    }\n    if (query.includeContent) {\n      for (let content in query.includeContent) {\n        param +=\n          'tag:\"' + query.includeContent[content].replace(\" \", \"+\") + '\"+';\n      }\n    }\n    if (query.excludeContent) {\n      for (let content in query.excludeContent) {\n        param +=\n          '-tag:\"' + query.excludeContent[content].replace(\" \", \"+\") + '\"+';\n      }\n    }\n\n    if (query.artist) {\n      param += \"Artist:\" + query.artist.replace(\" \", \"+\") + \"+\";\n    }\n\n    param = param.trim();\n    param = encodeURI(param);\n\n    return createRequestObject({\n      url: `${NHENTAI_DOMAIN}/search/?q=${param}&page=${page}`,\n      metadata: { sixDigit: false },\n      timeout: 4000,\n      method: \"GET\",\n    });\n  }\n\n  search(data, metadata) {\n    let $ = cheerio.load(data);\n    let mangaTiles = [];\n\n    // Was this a six digit request?\n    if (metadata.sixDigit) {\n      // Retrieve the ID from the body\n      let contextNode = $(\"#bigcontainer\");\n      let href = $(\"a\", contextNode).attr(\"href\");\n\n      let mangaId = parseInt(href?.match(/g\\/(\\d*)\\/\\d/)[1]);\n\n      let title = $(\"[itemprop=name]\").attr(\"content\") ?? \"\";\n\n      // Clean up the title by removing all metadata, these are items enclosed within [ ] brackets\n      title = title.replace(/(\\[.+?\\])/g, \"\").trim();\n\n      mangaTiles.push(\n        createMangaTile({\n          id: mangaId.toString(),\n          title: createIconText({ text: title }),\n          image: $(\"[itemprop=image]\").attr(\"content\") ?? \"\",\n        })\n      );\n      return mangaTiles;\n    }\n\n    let containerNode = $(\".index-container\");\n    for (let item of $(\".gallery\", containerNode).toArray()) {\n      let currNode = $(item);\n      let image = $(\"img\", currNode).attr(\"data-src\");\n\n      // If image is undefined, we've hit a lazyload part of the website. Adjust the scraping to target the other features\n      if (image === undefined) {\n        image = \"http:\" + $(\"img\", currNode).attr(\"src\");\n      }\n\n      let title = $(\".caption\", currNode).text();\n      let idHref = $(\"a\", currNode)\n        .attr(\"href\")\n        ?.match(/\\/(\\d*)\\//);\n\n      // Clean up the title by removing all metadata, these are items enclosed within [ ] brackets\n      title = title.replace(/(\\[.+?\\])/g, \"\").trim();\n\n      mangaTiles.push(\n        createMangaTile({\n          id: idHref[1],\n          title: createIconText({ text: title }),\n          image: image,\n        })\n      );\n    }\n\n    return mangaTiles;\n  }\n\n  getHomePageSectionRequest() {\n    let request = createRequestObject({\n      url: `${NHENTAI_DOMAIN}`,\n      method: \"GET\",\n    });\n    let homeSection = createHomeSection({\n      id: \"latest_hentai\",\n      title: \"LATEST HENTAI\",\n      view_more: true,\n    });\n    return [\n      createHomeSectionRequest({ request: request, sections: [homeSection] }),\n    ];\n  }\n\n  getHomePageSections(data, section) {\n    let updatedHentai = [];\n    let $ = cheerio.load(data);\n\n    let containerNode = $(\".index-container\");\n    for (let item of $(\".gallery\", containerNode).toArray()) {\n      let currNode = $(item);\n      let image = $(\"img\", currNode).attr(\"data-src\");\n\n      // If image is undefined, we've hit a lazyload part of the website. Adjust the scraping to target the other features\n      if (image === undefined) {\n        image = \"http:\" + $(\"img\", currNode).attr(\"src\");\n      }\n\n      // Clean up the title by removing all metadata, these are items enclosed within [ ] brackets\n      let title = $(\".caption\", currNode).text();\n      title = title.replace(/(\\[.+?\\])/g, \"\").trim();\n\n      let idHref = $(\"a\", currNode)\n        .attr(\"href\")\n        ?.match(/\\/(\\d*)\\//);\n\n      updatedHentai.push(\n        createMangaTile({\n          id: idHref[1],\n          title: createIconText({ text: title }),\n          image: image,\n        })\n      );\n    }\n\n    section[0].items = updatedHentai;\n    return section;\n  }\n\n  getMangaUrl(slug) {\n    return `https://guya.moe/g/${slug}/`;\n  }\n}\n","import MangaDex from \"./MangaDex\";\nimport Guya from \"./Guya\";\nimport NHentai from \"./NHentai\";\n\nconst hentai = localStorage.getItem(\"hentai\");\n\nconst sourcemap = {\n  MangaDex: new MangaDex(),\n  Guya: new Guya(),\n};\n\nif (hentai) {\n  sourcemap[\"NHentai\"] = new NHentai();\n}\n\nexport default sourcemap;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Discover from \"./containers/Discover.js\";\nimport Search from \"./containers/Search.js\";\n// import History from \"./containers/History.js\";\n// import Settings from \"./containers/Settings.js\";\nimport PageNotFound from \"./containers/PageNotFound.js\";\nimport sourcemap from \"./sources/sourcemap.js\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      discover: new Set(),\n    };\n    this.sources = Object.values(sourcemap);\n  }\n\n  initializeMobileMenu = () => {\n    const nav = document.getElementById(\"navMenu\");\n\n    const $navbarBurgers = Array.prototype.slice.call(\n      document.querySelectorAll(\".navbar-burger\"),\n      0\n    );\n    if ($navbarBurgers.length > 0) {\n      $navbarBurgers.forEach((el) => {\n        el.addEventListener(\"click\", () => {\n          el.classList.toggle(\"is-active\");\n          nav.classList.toggle(\"is-active\");\n        });\n      });\n    }\n\n    const navItems = Array.prototype.slice.call(\n      document.querySelectorAll(\".ni\"),\n      0\n    );\n\n    navItems.forEach((e) => {\n      e.addEventListener(\"click\", () => {\n        document.querySelector(\".navbar-burger\").classList.remove(\"is-active\");\n        nav.classList.remove(\"is-active\");\n      });\n    });\n  };\n\n  initializeDiscoverItems = () => {\n    this.sources.forEach((source) => {\n      let baseReqs = source.getHomePageSectionRequest();\n      baseReqs.forEach((homeSection) => {\n        homeSection\n          .request()\n          .then((e) => e.text())\n          .then((e) => {\n            source\n              .getHomePageSections(e, homeSection.sections)\n              .forEach((section) => {\n                section.source = source;\n                section.mangaUrlizer = source.getMangaUrl;\n                this.setState({\n                  discover: new Set(this.state.discover).add(section),\n                });\n              });\n          });\n      });\n    });\n  };\n\n  componentDidMount = () => {\n    this.initializeMobileMenu();\n    this.initializeDiscoverItems();\n  };\n\n  render() {\n    return (\n      <Router>\n        <nav\n          className=\"navbar is-light\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"container\">\n            <div className=\"navbar-brand\">\n              <div className=\"navbar-item navbar-logo\">\n                <a href=\"/\">\n                  <img src=\"https://guya.moe/static/logo_small.png\" alt=\"logo\" />\n                </a>\n              </div>\n              {/* eslint-disable-next-line */}\n              <a\n                role=\"button\"\n                className=\"navbar-burger\"\n                aria-label=\"menu\"\n                aria-expanded=\"false\"\n              >\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n              </a>\n            </div>\n\n            <div id=\"navMenu\" className=\"navbar-menu\">\n              <div className=\"navbar-start\">\n                <Link className=\"navbar-item ni\" to=\"/\">\n                  Discover\n                </Link>\n                <Link className=\"navbar-item ni\" to=\"/search\">\n                  Search\n                </Link>\n                {/* <Link className=\"navbar-item ni\" to=\"/history\">\n                  History\n                </Link> */}\n              </div>\n              {/* <div className=\"navbar-end\">\n                <Link className=\"navbar-item ni\" to=\"/settings\">\n                  Settings\n                </Link>\n              </div> */}\n            </div>\n          </div>\n        </nav>\n        <div className=\"container is-fluid\">\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Discover discover={this.state.discover} />\n              </Route>\n              <Route exact path=\"/search\">\n                <Search sources={this.sources} />\n              </Route>\n              {/* <Route exact path=\"/history\">\n                <History />\n              </Route>\n              <Route exact path=\"/settings\">\n                <Settings />\n              </Route> */}\n              <Route>\n                <PageNotFound />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport \"./style/bulma.min.css\";\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}